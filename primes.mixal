* MIX Assembly Language, GNU MDK 1.2.9
*
* Create and display a table of the first 500 primes
* Knuth 1.3.2 program P, my own implementation
*
CAND    EQU     101     candidate integer to be tested
MAX     EQU     102     max offset of table (size of table minus 1)
N       EQU     103     temp storage
LINEMAX EQU     104     maximum primes to print on a single line
CBUF    EQU     105     start of current buffer
BUF1    EQU     400     two buffers for writing output
BUF2    EQU     425
TERM    EQU     19      stdout
*
* Initialize table with first two primes
        ORIG    500
TABLE   CON     2
        CON     3
        ORIG    3000
START   ENTA    499     desired max offset for table of 500 primes
        STA     MAX
        ENTA    10
        STA     LINEMAX each line in table contains 10 primes
        ENT1    1       we begin with 2 primes in the table, offset is 1
*
* Check to see if table is full, halt if it is
2H      CMP1    MAX
        JL      4F
        JSJ     DISP
*
* Add another prime to the table
* Initialize the next candidate to next odd number after largest prime in table
4H      LDA     TABLE,1
        INCA    2
        STA     CAND
* index for prime divisors is reset
        ENT2    0
* Check divisibility of this new candidate by entries in prime table
6H      ENTA    0
        LDX     CAND            load candidate integer
        DIV     TABLE,2
        JXZ     9F
* nonzero remainder, check if we are at end of table
        ST1     N
        CMP2    N
        JE      8F
* not at end of table, prepare to check next divisor
        INC2    1
        JSJ     6B
* checked all primes in table, current candidate is the next prime
8H      INC1    1
        LDA     CAND
        STA     TABLE,1
        JSJ     2B
* zero remainder, candidate is not prime
* initialize next candidate
9H      LDA     CAND
        INCA    2
        STA     CAND
        ENT2    0
        JSJ     6B
* table is finished, display the results
* start by initializing the index registers
DISP    ENT1    0
        ENT2    0
* last cell of each buffer points to the other buffer
        LDA     BUF2
        STA     BUF1 + 24
        LDA     BUF1
        STA     BUF2 + 24
* set the current buffer
        STA     CBUF
* display the title
        OUT     TITLE(TERM)
* write next word to line
2H      LDA     TABLE,1
        CHAR
        STX     CBUF,2(2:5)
        INC1    1
        INC2    1
* check to see if we are at end of current line
        CMP2    LINEMAX
        JNE     2B
* at the end of a line, send the buffer to the printer
        OUT     CBUF(TERM)
* check to see if we are at the end of the table
        CMP1    MAX
        JGE     4F
* not at end of table, so switch buffers and get another line
        LDA     CBUF + 24
        STA     CBUF
        ENT2    0
        JSJ     2B
4H      HLT
TITLE   ALF     "THE F"
        ALF     "IRST "
        ALF     "500 P"
        ALF     "RIMES"
        END     START
